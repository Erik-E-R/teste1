name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Docker
        uses: docker/setup-buildx-action@v3

      - name: Login no DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest .

      - name: Push da imagem
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy em staging (exemplo local ou script SSH)
        run: echo "Deploy em staging aqui..."
        # Você pode rodar um SSH para VPS ou serviço de CI, ex:
        # ssh -i ${{ secrets.STAGING_SSH_PRIVATE_KEY }} user@staging-server 'docker pull && docker-compose up -d'

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy em produção (manual ou automático)
        run: echo "Deploy em produção aqui..."
        # Comando real de deploy em servidor de produção
